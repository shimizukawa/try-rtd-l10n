# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2016, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.6+\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-28 17:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2016\n"
"Language-Team: Japanese (https://www.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/markup/code.rst:6
msgid "Showing code examples"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:11
msgid ""
"Examples of Python source code or interactive sessions are represented using"
" standard reST literal blocks.  They are started by a ``::`` at the end of "
"the preceding paragraph and delimited by indentation."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:15
msgid ""
"Representing an interactive session requires including the prompts and "
"output along with the Python code.  No special markup is required for "
"interactive sessions.  After the last line of input or output presented, "
"there should not be an \"unused\" primary prompt; this is an example of what"
" *not* to do::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:24
msgid ""
"Syntax highlighting is done with `Pygments <http://pygments.org>`_ and "
"handled in a smart way:"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:27
msgid ""
"There is a \"highlighting language\" for each source file.  Per default, "
"this is ``'python'`` as the majority of files will have to highlight Python "
"snippets, but the doc-wide default can be set with the "
":confval:`highlight_language` config value."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:32
msgid ""
"Within Python highlighting mode, interactive sessions are recognized "
"automatically and highlighted appropriately.  Normal Python code is only "
"highlighted if it is parseable (so you can use Python as the default, but "
"interspersed snippets of shell commands or other code blocks will not be "
"highlighted as Python)."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:38
msgid ""
"The highlighting language can be changed using the ``highlight`` directive, "
"used as follows:"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:43
msgid "Example::"
msgstr "サンプル::"

#: ../../sphinx/doc/markup/code.rst:47
msgid ""
"This language is used until the next ``highlight`` directive is encountered."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:49
msgid ""
"For documents that have to show snippets in different languages, there's "
"also a :rst:dir:`code-block` directive that is given the highlighting "
"language directly:"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:55
msgid "Use it like this::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:61
msgid "The directive's alias name :rst:dir:`sourcecode` works as well."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:63
msgid "The valid values for the highlighting language are:"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:65
msgid "``none`` (no highlighting)"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:66
msgid "``python`` (the default when :confval:`highlight_language` isn't set)"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:67
msgid ""
"``guess`` (let Pygments guess the lexer based on contents, only works with "
"certain well-recognizable languages)"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:69
msgid "``rest``"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:70
msgid "``c``"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:71
msgid ""
"... and any other `lexer alias that Pygments supports "
"<http://pygments.org/docs/lexers/>`_."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:74
msgid ""
"If highlighting with the selected language fails (i.e. Pygments emits an "
"\"Error\" token), the block is not highlighted in any way."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:78
msgid "Line numbers"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:80
msgid ""
"Pygments can generate line numbers for code blocks.  For automatically-"
"highlighted blocks (those started by ``::``), line numbers must be switched "
"on in a :rst:dir:`highlight` directive, with the ``linenothreshold`` "
"option::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:88
msgid ""
"This will produce line numbers for all code blocks longer than five lines."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:90
msgid ""
"For :rst:dir:`code-block` blocks, a ``linenos`` flag option can be given to "
"switch on line numbers for the individual block::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:98
msgid ""
"The first line number can be selected with the ``lineno-start`` option.  If "
"present, ``linenos`` is automatically activated as well."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:106
msgid ""
"Additionally, an ``emphasize-lines`` option can be given to have Pygments "
"emphasize particular lines::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:118
msgid "``emphasize-lines`` has been added."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:121
msgid "``lineno-start`` has been added."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:126
msgid "Includes"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:130
msgid ""
"Longer displays of verbatim text may be included by storing the example text"
" in an external file containing only plain text.  The file may be included "
"using the ``literalinclude`` directive. [1]_ For example, to include the "
"Python source file :file:`example.py`, use::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:137
msgid ""
"The file name is usually relative to the current file's path.  However, if "
"it is absolute (starting with ``/``), it is relative to the top source "
"directory."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:141
msgid ""
"Tabs in the input are expanded if you give a ``tab-width`` option with the "
"desired tab width."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:144
msgid ""
"Like :rst:dir:`code-block`, the directive supports the ``linenos`` flag "
"option to switch on line numbers, the ``lineno-start`` option to select the "
"first line number, the ``emphasize-lines`` option to emphasize particular "
"lines, and a ``language`` option to select a language different from the "
"current file's standard language.  Example with options::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:155
msgid ""
"Include files are assumed to be encoded in the :confval:`source_encoding`. "
"If the file has a different encoding, you can specify it with the "
"``encoding`` option::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:162
msgid ""
"The directive also supports including only parts of the file.  If it is a "
"Python module, you can select a class, function or method to include using "
"the ``pyobject`` option::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:169
msgid ""
"This would only include the code lines belonging to the ``start()`` method "
"in the ``Timer`` class within the file."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:172
msgid ""
"Alternately, you can specify exactly which lines to include by giving a "
"``lines`` option::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:178
msgid "This includes the lines 1, 3, 5 to 10 and lines 20 to the last line."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:180
msgid ""
"Another way to control which part of the file is included is to use the "
"``start-after`` and ``end-before`` options (or only one of them).  If "
"``start-after`` is given as a string option, only lines that follow the "
"first line containing that string are included.  If ``end-before`` is given "
"as a string option, only lines that precede the first lines containing that "
"string are included."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:187
msgid ""
"When specifying particular parts of a file to display, it can be useful to "
"display exactly which lines are being presented. This can be done using the "
"``lineno-match`` option."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:191
msgid ""
"You can prepend and/or append a line to the included code, using the "
"``prepend`` and ``append`` option, respectively.  This is useful e.g. for "
"highlighting PHP code that doesn't include the ``<?php``/``?>`` markers."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:196
msgid ""
"If you want to show the diff of the code, you can specify the old file by "
"giving a ``diff`` option::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:202
msgid ""
"This shows the diff between example.py and example.py.orig with unified diff"
" format."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:205
msgid "The ``encoding`` option."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:207
msgid ""
"The ``pyobject``, ``lines``, ``start-after`` and ``end-before`` options, as "
"well as support for absolute filenames."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:210
msgid "The ``prepend`` and ``append`` options, as well as ``tab-width``."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:212
msgid "The ``diff`` option. The ``lineno-match`` option."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:218
msgid "Caption and name"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:222
msgid ""
"A ``caption`` option can be given to show that name before the code block. A"
" ``name`` option can be provided implicit target name that can be referenced"
" by using :rst:role:`ref`. For example::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:234
msgid ""
":rst:dir:`literalinclude` also supports the ``caption`` and ``name`` option."
" ``caption`` has a additional feature that if you leave the value empty, the"
" shown filename will be exactly the one given as an argument."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:240
msgid "Dedent"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:244
msgid ""
"A ``dedent`` option can be given to strip indentation characters from the "
"code block. For example::"
msgstr ""

#: ../../sphinx/doc/markup/code.rst:252
msgid ":rst:dir:`code-block` also supports the ``dedent`` option."
msgstr ""

#: ../../sphinx/doc/markup/code.rst:256
msgid "Footnotes"
msgstr "脚注"

#: ../../sphinx/doc/markup/code.rst:257
msgid ""
"There is a standard ``.. include`` directive, but it raises errors if the "
"file is not found.  This one only emits a warning."
msgstr ""
